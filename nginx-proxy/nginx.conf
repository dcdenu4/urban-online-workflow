server {
	#listen 8080;
	listen 80;
	#listen 443 ssl http2;
	#certbot stuff     #server_name localhost;
	#server_name frontend;
	#server_name 0.0.0.0;
	server_name 35.238.129.2;
	#ssl_certificate /etc/ssl/certs/nginx/example2.crt;
	#ssl_certificate_key /etc/ssl/certs/nginx/example2.key;
	#include /etc/nginx/includes/ssl.conf;

	# Attempting to deal with CORS error
	add_header 'Access-Control-Allow-Origin' '*';
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

	location / {
		proxy_pass http://frontend:3000;
		# using http_host instead of host to maybe help with a websocket error
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		# Handling OPTIONS for this location directive.
		if ($request_method = 'OPTIONS') {
			add_header Access-Control-Allow-Origin "$http_origin";
		add_header Access-Control-Allow-Credentials 'true';
		add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Origin, X-Requested-With, Accept';
		add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
		add_header Content-Type 'text/plain; charset=utf-8';
		return 204;
	}
	###
	# These helped resolve a "WebSocket connection to 'ws:35.238.129.2' failed" error
	proxy_redirect off;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	###

	#include /etc/nginx/includes/proxy.conf;
	#proxy_pass http://172.18.0.3:80;
	#proxy_pass http://localhost:3000;
	#proxy_set_header X-Real-IP $remote_addr;
	#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#proxy_set_header X-NginX-Proxy true;
	#proxy_ssl_session_reuse off;
	#proxy_set_header Host $http_host;
	#proxy_cache_bypass $http_upgrade;
	#proxy_redirect http://frontend:3000/ https://$server_name/;
	}
}

server {
	#listen 8080;
	listen 8000;
	#listen 443 ssl http2;
	#certbot stuff
	#server_name localhost;
	#server_name frontend;
	#server_name 0.0.0.0;
	server_name 35.238.129.2:8000;
	#ssl_certificate /etc/ssl/certs/nginx/example2.crt;
	#ssl_certificate_key /etc/ssl/certs/nginx/example2.key;
	#include /etc/nginx/includes/ssl.conf;

	# Attempting to deal with CORS error
	#add_header 'Access-Control-Allow-Origin' '*';
	add_header 'Access-Control-Allow-Origin' 'http://35.238.129.2';
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
	location /* {
		proxy_pass http://api:8000;
		# using http_host instead of host to maybe help with a websocket error
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		# Handling OPTIONS for this location directive.
		if ($request_method = 'OPTIONS') {
			#add_header Access-Control-Allow-Origin "$http_origin";
			add_header Access-Control-Allow-Origin "http://35.238.129.2";
			add_header Access-Control-Allow-Credentials 'true';
			add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Origin, X-Requested-With, Accept';
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
			add_header Content-Type 'text/plain; charset=utf-8';
			return 204;
		}
		if ($request_method = 'GET') {
			#add_header Access-Control-Allow-Origin "$http_origin";
			add_header Access-Control-Allow-Origin "http://35.238.129.2";
			add_header Access-Control-Allow-Credentials 'true';
			add_header Access-Control-Allow-Headers 'Authorization, Content-Type, Origin, X-Requested-With, Accept';
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
			add_header Content-Type 'text/plain; charset=utf-8';
			return 204;
		}
		###
		# These helped resolve a "WebSocket connection to 'ws:35.238.129.2' failed" error
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		###

		#include /etc/nginx/includes/proxy.conf;
		#proxy_pass http://172.18.0.3:80;
		#proxy_pass http://localhost:3000;
		#proxy_set_header X-Real-IP $remote_addr;
		#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#proxy_set_header X-NginX-Proxy true;
		#proxy_ssl_session_reuse off;
		#proxy_set_header Host $http_host;
		#proxy_cache_bypass $http_upgrade;
		#proxy_redirect http://frontend:3000/ https://$server_name/;
	}
	#access_log off;
	#error_log /var/log/nginx/error.log error;
}
